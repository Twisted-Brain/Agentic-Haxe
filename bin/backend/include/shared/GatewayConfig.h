// Generated by Haxe 4.3.7
#ifndef INCLUDED_shared_GatewayConfig
#define INCLUDED_shared_GatewayConfig

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(shared,GatewayConfig)

namespace shared{


class HXCPP_CLASS_ATTRIBUTES GatewayConfig_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef GatewayConfig_obj OBJ_;
		GatewayConfig_obj();

	public:
		enum { _hx_ClassId = 0x081c0f5d };

		void __construct(::String apiKey,::String baseUrl,::String defaultModel, ::Dynamic __o_timeout, ::Dynamic __o_maxRetries);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="shared.GatewayConfig")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"shared.GatewayConfig"); }
		static ::hx::ObjectPtr< GatewayConfig_obj > __new(::String apiKey,::String baseUrl,::String defaultModel, ::Dynamic __o_timeout, ::Dynamic __o_maxRetries);
		static ::hx::ObjectPtr< GatewayConfig_obj > __alloc(::hx::Ctx *_hx_ctx,::String apiKey,::String baseUrl,::String defaultModel, ::Dynamic __o_timeout, ::Dynamic __o_maxRetries);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~GatewayConfig_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("GatewayConfig",c6,35,76,e2); }

		::String apiKey;
		::String baseUrl;
		::String defaultModel;
		int timeout;
		int maxRetries;
		::String toJson();
		::Dynamic toJson_dyn();

};

} // end namespace shared

#endif /* INCLUDED_shared_GatewayConfig */ 
