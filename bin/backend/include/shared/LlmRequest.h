// Generated by Haxe 4.3.7
#ifndef INCLUDED_shared_LlmRequest
#define INCLUDED_shared_LlmRequest

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(shared,LlmRequest)

namespace shared{


class HXCPP_CLASS_ATTRIBUTES LlmRequest_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef LlmRequest_obj OBJ_;
		LlmRequest_obj();

	public:
		enum { _hx_ClassId = 0x449cc8a7 };

		void __construct(::String message,::String model, ::Dynamic __o_temperature, ::Dynamic __o_maxTokens);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="shared.LlmRequest")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"shared.LlmRequest"); }
		static ::hx::ObjectPtr< LlmRequest_obj > __new(::String message,::String model, ::Dynamic __o_temperature, ::Dynamic __o_maxTokens);
		static ::hx::ObjectPtr< LlmRequest_obj > __alloc(::hx::Ctx *_hx_ctx,::String message,::String model, ::Dynamic __o_temperature, ::Dynamic __o_maxTokens);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~LlmRequest_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("LlmRequest",02,81,44,80); }

		static  ::shared::LlmRequest fromJson(::String json);
		static ::Dynamic fromJson_dyn();

		::String message;
		::String model;
		Float temperature;
		int maxTokens;
		Float timestamp;
		::String toJson();
		::Dynamic toJson_dyn();

};

} // end namespace shared

#endif /* INCLUDED_shared_LlmRequest */ 
