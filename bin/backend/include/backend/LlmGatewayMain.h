// Generated by Haxe 4.3.7
#ifndef INCLUDED_backend_LlmGatewayMain
#define INCLUDED_backend_LlmGatewayMain

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(backend,LlmGatewayMain)
HX_DECLARE_CLASS1(shared,LlmRequest)
HX_DECLARE_CLASS1(shared,LlmResponse)
HX_DECLARE_CLASS2(sys,thread,Mutex)

namespace backend{


class HXCPP_CLASS_ATTRIBUTES LlmGatewayMain_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef LlmGatewayMain_obj OBJ_;
		LlmGatewayMain_obj();

	public:
		enum { _hx_ClassId = 0x5b1e84c0 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="backend.LlmGatewayMain")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"backend.LlmGatewayMain"); }

		inline static ::hx::ObjectPtr< LlmGatewayMain_obj > __new() {
			::hx::ObjectPtr< LlmGatewayMain_obj > __this = new LlmGatewayMain_obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< LlmGatewayMain_obj > __alloc(::hx::Ctx *_hx_ctx) {
			LlmGatewayMain_obj *__this = (LlmGatewayMain_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(LlmGatewayMain_obj), false, "backend.LlmGatewayMain"));
			*(void **)__this = LlmGatewayMain_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~LlmGatewayMain_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("LlmGatewayMain",90,ed,20,f3); }

		static void __boot();
		static ::String openRouterApiKey;
		static ::String openRouterBaseUrl;
		static ::String defaultModel;
		static bool isRunning;
		static  ::sys::thread::Mutex requestMutex;
		static void main();
		static ::Dynamic main_dyn();

		static void initializeGateway();
		static ::Dynamic initializeGateway_dyn();

		static void startGatewayServer();
		static ::Dynamic startGatewayServer_dyn();

		static void processIncomingRequests();
		static ::Dynamic processIncomingRequests_dyn();

		static  ::shared::LlmResponse processLlmRequest( ::shared::LlmRequest request);
		static ::Dynamic processLlmRequest_dyn();

		static  ::shared::LlmResponse callOpenRouterApi( ::shared::LlmRequest request);
		static ::Dynamic callOpenRouterApi_dyn();

		static  ::shared::LlmResponse createDemoResponse( ::shared::LlmRequest request);
		static ::Dynamic createDemoResponse_dyn();

		static void shutdown();
		static ::Dynamic shutdown_dyn();

};

} // end namespace backend

#endif /* INCLUDED_backend_LlmGatewayMain */ 
