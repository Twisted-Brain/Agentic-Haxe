// Generated by Haxe 4.3.7
#include <hxcpp.h>

#ifndef INCLUDED_Sys
#include <Sys.h>
#endif
#ifndef INCLUDED_backend_LlmGatewayMain
#include <backend/LlmGatewayMain.h>
#endif
#ifndef INCLUDED_domain_ports_ILogger
#include <domain/ports/ILogger.h>
#endif
#ifndef INCLUDED_platform_core_cpp_LoggerCpp
#include <platform/core/cpp/LoggerCpp.h>
#endif
#ifndef INCLUDED_wiring_ApplicationBootstrap
#include <wiring/ApplicationBootstrap.h>
#endif
#ifndef INCLUDED_wiring_DependencyContainer
#include <wiring/DependencyContainer.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_160eb2cd40aa3158_15_main,"backend.LlmGatewayMain","main",0x5554227d,"backend.LlmGatewayMain.main","backend/LlmGatewayMain.hx",15,0x91485b33)
HX_LOCAL_STACK_FRAME(_hx_pos_160eb2cd40aa3158_33_startHttpServer,"backend.LlmGatewayMain","startHttpServer",0xe219aba9,"backend.LlmGatewayMain.startHttpServer","backend/LlmGatewayMain.hx",33,0x91485b33)
namespace backend{

void LlmGatewayMain_obj::__construct() { }

Dynamic LlmGatewayMain_obj::__CreateEmpty() { return new LlmGatewayMain_obj; }

void *LlmGatewayMain_obj::_hx_vtable = 0;

Dynamic LlmGatewayMain_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< LlmGatewayMain_obj > _hx_result = new LlmGatewayMain_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool LlmGatewayMain_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x5b1e84c0;
}

 ::platform::core::cpp::LoggerCpp LlmGatewayMain_obj::logger;

void LlmGatewayMain_obj::main(){
            	HX_STACKFRAME(&_hx_pos_160eb2cd40aa3158_15_main)
HXLINE(  17)		::wiring::ApplicationBootstrap_obj::initialize();
HXLINE(  18)		::backend::LlmGatewayMain_obj::logger = ::wiring::DependencyContainer_obj::getLogger();
HXLINE(  20)		::backend::LlmGatewayMain_obj::logger->info(HX_("LLM Gateway Backend starting...",f3,ac,aa,d2),null());
HXLINE(  23)		::backend::LlmGatewayMain_obj::startHttpServer();
HXLINE(  25)		::backend::LlmGatewayMain_obj::logger->info(HX_("LLM Gateway Backend ready",68,95,3d,f8),null());
HXLINE(  28)		while(true){
HXLINE(  29)			::Sys_obj::sleep(((Float)1.0));
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(LlmGatewayMain_obj,main,(void))

void LlmGatewayMain_obj::startHttpServer(){
            	HX_STACKFRAME(&_hx_pos_160eb2cd40aa3158_33_startHttpServer)
HXLINE(  34)		::backend::LlmGatewayMain_obj::logger->info(HX_("Starting HTTP server on port 8080",d3,9b,7e,1f),null());
HXLINE(  37)		::backend::LlmGatewayMain_obj::logger->info(HX_("HTTP server started successfully",8b,1d,e7,9a),null());
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(LlmGatewayMain_obj,startHttpServer,(void))


LlmGatewayMain_obj::LlmGatewayMain_obj()
{
}

bool LlmGatewayMain_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"main") ) { outValue = main_dyn(); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"logger") ) { outValue = ( logger ); return true; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"startHttpServer") ) { outValue = startHttpServer_dyn(); return true; }
	}
	return false;
}

bool LlmGatewayMain_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"logger") ) { logger=ioValue.Cast<  ::platform::core::cpp::LoggerCpp >(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *LlmGatewayMain_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo LlmGatewayMain_obj_sStaticStorageInfo[] = {
	{::hx::fsObject /*  ::platform::core::cpp::LoggerCpp */ ,(void *) &LlmGatewayMain_obj::logger,HX_("logger",90,d6,68,5c)},
	{ ::hx::fsUnknown, 0, null()}
};
#endif

static void LlmGatewayMain_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(LlmGatewayMain_obj::logger,"logger");
};

#ifdef HXCPP_VISIT_ALLOCS
static void LlmGatewayMain_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(LlmGatewayMain_obj::logger,"logger");
};

#endif

::hx::Class LlmGatewayMain_obj::__mClass;

static ::String LlmGatewayMain_obj_sStaticFields[] = {
	HX_("logger",90,d6,68,5c),
	HX_("main",39,38,56,48),
	HX_("startHttpServer",6d,37,ea,a6),
	::String(null())
};

void LlmGatewayMain_obj::__register()
{
	LlmGatewayMain_obj _hx_dummy;
	LlmGatewayMain_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("backend.LlmGatewayMain",aa,9c,a6,ba);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &LlmGatewayMain_obj::__GetStatic;
	__mClass->mSetStaticField = &LlmGatewayMain_obj::__SetStatic;
	__mClass->mMarkFunc = LlmGatewayMain_obj_sMarkStatics;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(LlmGatewayMain_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< LlmGatewayMain_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = LlmGatewayMain_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = LlmGatewayMain_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = LlmGatewayMain_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace backend
