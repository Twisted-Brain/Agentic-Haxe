// Generated by Haxe 4.3.7
#include <hxcpp.h>

#ifndef INCLUDED_shared_ApiModels
#include <shared/ApiModels.h>
#endif

namespace shared{

void ApiModels_obj::__construct() { }

Dynamic ApiModels_obj::__CreateEmpty() { return new ApiModels_obj; }

void *ApiModels_obj::_hx_vtable = 0;

Dynamic ApiModels_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< ApiModels_obj > _hx_result = new ApiModels_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool ApiModels_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x7ff9eb77;
}


ApiModels_obj::ApiModels_obj()
{
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *ApiModels_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *ApiModels_obj_sStaticStorageInfo = 0;
#endif

::hx::Class ApiModels_obj::__mClass;

void ApiModels_obj::__register()
{
	ApiModels_obj _hx_dummy;
	ApiModels_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("shared.ApiModels",bb,59,10,42);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< ApiModels_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ApiModels_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ApiModels_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace shared
