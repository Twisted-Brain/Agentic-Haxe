// Generated by Haxe 4.3.7
#include <hxcpp.h>

#ifndef INCLUDED_shared_LlmModel
#include <shared/LlmModel.h>
#endif
#ifndef INCLUDED_shared_LlmModelHelper
#include <shared/LlmModelHelper.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_48f2661835973c30_148_toString,"shared.LlmModelHelper","toString",0xd5d733a7,"shared.LlmModelHelper.toString","shared/ApiModels.hx",148,0xfd6bed64)
HX_LOCAL_STACK_FRAME(_hx_pos_48f2661835973c30_162_fromString,"shared.LlmModelHelper","fromString",0x66f78596,"shared.LlmModelHelper.fromString","shared/ApiModels.hx",162,0xfd6bed64)
HX_LOCAL_STACK_FRAME(_hx_pos_48f2661835973c30_176_getAllModels,"shared.LlmModelHelper","getAllModels",0xda5625b0,"shared.LlmModelHelper.getAllModels","shared/ApiModels.hx",176,0xfd6bed64)
namespace shared{

void LlmModelHelper_obj::__construct() { }

Dynamic LlmModelHelper_obj::__CreateEmpty() { return new LlmModelHelper_obj; }

void *LlmModelHelper_obj::_hx_vtable = 0;

Dynamic LlmModelHelper_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< LlmModelHelper_obj > _hx_result = new LlmModelHelper_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool LlmModelHelper_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x5a262f4f;
}

::String LlmModelHelper_obj::toString( ::shared::LlmModel model){
            	HX_STACKFRAME(&_hx_pos_48f2661835973c30_148_toString)
HXDLIN( 148)		switch((int)(model->_hx_getIndex())){
            			case (int)0: {
HXLINE( 149)				return HX_("openai/gpt-3.5-turbo",8c,98,37,79);
            			}
            			break;
            			case (int)1: {
HXLINE( 150)				return HX_("openai/gpt-4",75,98,42,82);
            			}
            			break;
            			case (int)2: {
HXLINE( 151)				return HX_("openai/gpt-4-turbo",c6,32,cb,75);
            			}
            			break;
            			case (int)3: {
HXLINE( 152)				return HX_("anthropic/claude-3-haiku",b4,80,96,b9);
            			}
            			break;
            			case (int)4: {
HXLINE( 153)				return HX_("anthropic/claude-3-sonnet",51,7e,f3,22);
            			}
            			break;
            			case (int)5: {
HXLINE( 154)				return HX_("anthropic/claude-3-opus",45,77,10,e3);
            			}
            			break;
            			case (int)6: {
HXLINE( 155)				return HX_("meta-llama/llama-2-70b-chat",71,0d,56,06);
            			}
            			break;
            			case (int)7: {
HXLINE( 156)				return HX_("mistralai/mixtral-8x7b-instruct",8d,ff,50,86);
            			}
            			break;
            			case (int)8: {
HXLINE( 157)				::String name = model->_hx_getString(0);
HXDLIN( 157)				return name;
            			}
            			break;
            		}
HXLINE( 148)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(LlmModelHelper_obj,toString,return )

 ::shared::LlmModel LlmModelHelper_obj::fromString(::String modelStr){
            	HX_STACKFRAME(&_hx_pos_48f2661835973c30_162_fromString)
HXDLIN( 162)		::String _hx_switch_0 = modelStr;
            		if (  (_hx_switch_0==HX_("anthropic/claude-3-haiku",b4,80,96,b9)) ){
HXLINE( 166)			return ::shared::LlmModel_obj::Claude3Haiku_dyn();
HXDLIN( 166)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==HX_("anthropic/claude-3-opus",45,77,10,e3)) ){
HXLINE( 168)			return ::shared::LlmModel_obj::Claude3Opus_dyn();
HXDLIN( 168)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==HX_("anthropic/claude-3-sonnet",51,7e,f3,22)) ){
HXLINE( 167)			return ::shared::LlmModel_obj::Claude3Sonnet_dyn();
HXDLIN( 167)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==HX_("meta-llama/llama-2-70b-chat",71,0d,56,06)) ){
HXLINE( 169)			return ::shared::LlmModel_obj::Llama2_70B_dyn();
HXDLIN( 169)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==HX_("mistralai/mixtral-8x7b-instruct",8d,ff,50,86)) ){
HXLINE( 170)			return ::shared::LlmModel_obj::Mixtral8x7B_dyn();
HXDLIN( 170)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==HX_("openai/gpt-3.5-turbo",8c,98,37,79)) ){
HXLINE( 163)			return ::shared::LlmModel_obj::GPT35Turbo_dyn();
HXDLIN( 163)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==HX_("openai/gpt-4",75,98,42,82)) ){
HXLINE( 164)			return ::shared::LlmModel_obj::GPT4_dyn();
HXDLIN( 164)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==HX_("openai/gpt-4-turbo",c6,32,cb,75)) ){
HXLINE( 165)			return ::shared::LlmModel_obj::GPT4Turbo_dyn();
HXDLIN( 165)			goto _hx_goto_1;
            		}
            		/* default */{
HXLINE( 171)			return ::shared::LlmModel_obj::Custom(modelStr);
            		}
            		_hx_goto_1:;
HXLINE( 162)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(LlmModelHelper_obj,fromString,return )

::Array< ::Dynamic> LlmModelHelper_obj::getAllModels(){
            	HX_STACKFRAME(&_hx_pos_48f2661835973c30_176_getAllModels)
HXDLIN( 176)		return ::Array_obj< ::Dynamic>::__new(8)->init(0,::shared::LlmModel_obj::GPT35Turbo_dyn())->init(1,::shared::LlmModel_obj::GPT4_dyn())->init(2,::shared::LlmModel_obj::GPT4Turbo_dyn())->init(3,::shared::LlmModel_obj::Claude3Haiku_dyn())->init(4,::shared::LlmModel_obj::Claude3Sonnet_dyn())->init(5,::shared::LlmModel_obj::Claude3Opus_dyn())->init(6,::shared::LlmModel_obj::Llama2_70B_dyn())->init(7,::shared::LlmModel_obj::Mixtral8x7B_dyn());
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(LlmModelHelper_obj,getAllModels,return )


LlmModelHelper_obj::LlmModelHelper_obj()
{
}

bool LlmModelHelper_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 8:
		if (HX_FIELD_EQ(inName,"toString") ) { outValue = toString_dyn(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"fromString") ) { outValue = fromString_dyn(); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"getAllModels") ) { outValue = getAllModels_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *LlmModelHelper_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *LlmModelHelper_obj_sStaticStorageInfo = 0;
#endif

::hx::Class LlmModelHelper_obj::__mClass;

static ::String LlmModelHelper_obj_sStaticFields[] = {
	HX_("toString",ac,d0,6e,38),
	HX_("fromString",db,2d,74,54),
	HX_("getAllModels",35,29,81,9e),
	::String(null())
};

void LlmModelHelper_obj::__register()
{
	LlmModelHelper_obj _hx_dummy;
	LlmModelHelper_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("shared.LlmModelHelper",d3,48,10,57);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &LlmModelHelper_obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(LlmModelHelper_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< LlmModelHelper_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = LlmModelHelper_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = LlmModelHelper_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace shared
