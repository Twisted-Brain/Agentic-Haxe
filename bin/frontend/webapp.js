// Generated by Haxe 4.3.7
(function ($global) { "use strict";
var HxOverrides = function() { };
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	return s.substr(pos,len);
};
HxOverrides.now = function() {
	return Date.now();
};
var StringTools = function() { };
StringTools.isSpace = function(s,pos) {
	var c = HxOverrides.cca(s,pos);
	if(!(c > 8 && c < 14)) {
		return c == 32;
	} else {
		return true;
	}
};
StringTools.ltrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,r)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,r,l - r);
	} else {
		return s;
	}
};
StringTools.rtrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,l - r - 1)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,0,l - r);
	} else {
		return s;
	}
};
StringTools.trim = function(s) {
	return StringTools.ltrim(StringTools.rtrim(s));
};
var frontend_WebAppMain = function() { };
frontend_WebAppMain.main = function() {
	if(window.document.readyState == "loading") {
		window.document.addEventListener("DOMContentLoaded",frontend_WebAppMain.onDOMReady);
	} else {
		frontend_WebAppMain.onDOMReady();
	}
};
frontend_WebAppMain.onDOMReady = function() {
	wiring_ApplicationBootstrap.initialize();
	frontend_WebAppMain.logger = wiring_DependencyContainer.getLogger();
	frontend_WebAppMain.logger.info("WebApp Frontend starting...");
	frontend_WebAppMain.initializeUI();
	frontend_WebAppMain.logger.info("WebApp Frontend ready");
};
frontend_WebAppMain.initializeUI = function() {
	var statusElement = window.document.getElementById("status");
	if(statusElement != null) {
		statusElement.textContent = "Connected";
		statusElement.className = "status connected";
	}
	var sendButton = window.document.getElementById("send-button");
	var messageInput = window.document.getElementById("message-input");
	if(sendButton != null && messageInput != null) {
		sendButton.addEventListener("click",frontend_WebAppMain.sendMessage);
		messageInput.addEventListener("keypress",function(e) {
			if(e.key == "Enter") {
				frontend_WebAppMain.sendMessage();
			}
		});
	}
	frontend_WebAppMain.logger.info("UI initialized successfully");
};
frontend_WebAppMain.sendMessage = function() {
	var messageInput = window.document.getElementById("message-input");
	var responseArea = window.document.getElementById("response-area");
	if(messageInput != null && responseArea != null) {
		var message = StringTools.trim(messageInput.value);
		if(message.length > 0) {
			frontend_WebAppMain.addMessageToChat("user",message);
			messageInput.value = "";
			haxe_Timer.delay(function() {
				frontend_WebAppMain.addMessageToChat("assistant","This is a simulated response. Backend integration needed.");
			},1000);
		}
	}
};
frontend_WebAppMain.addMessageToChat = function(sender,message) {
	var responseArea = window.document.getElementById("response-area");
	if(responseArea != null) {
		var messageDiv = window.document.createElement("div");
		messageDiv.className = "message " + sender + "-message";
		messageDiv.textContent = "" + sender + ": " + message;
		responseArea.appendChild(messageDiv);
		responseArea.scrollTop = responseArea.scrollHeight;
	}
};
var haxe_Timer = function(time_ms) {
	var me = this;
	this.id = setInterval(function() {
		me.run();
	},time_ms);
};
haxe_Timer.delay = function(f,time_ms) {
	var t = new haxe_Timer(time_ms);
	t.run = function() {
		t.stop();
		f();
	};
	return t;
};
haxe_Timer.prototype = {
	stop: function() {
		if(this.id == null) {
			return;
		}
		clearInterval(this.id);
		this.id = null;
	}
	,run: function() {
	}
};
var haxe_ds_StringMap = function() {
	this.h = Object.create(null);
};
var haxe_iterators_ArrayIterator = function(array) {
	this.current = 0;
	this.array = array;
};
haxe_iterators_ArrayIterator.prototype = {
	hasNext: function() {
		return this.current < this.array.length;
	}
	,next: function() {
		return this.array[this.current++];
	}
};
var platform_core_js_HttpClientJs = function() {
	this.headers = new haxe_ds_StringMap();
};
var platform_core_js_LoggerJs = function() {
};
platform_core_js_LoggerJs.prototype = {
	info: function(message,context) {
		if(context != null) {
			$global.console.info(message,context);
		} else {
			$global.console.info(message);
		}
	}
};
var platform_core_js_PlatformClockJs = function() {
};
platform_core_js_PlatformClockJs.prototype = {
	nowMs: function() {
		return Date.now();
	}
};
var wiring_ApplicationBootstrap = function() { };
wiring_ApplicationBootstrap.initialize = function() {
	if(wiring_ApplicationBootstrap._isInitialized) {
		return;
	}
	wiring_ApplicationBootstrap._logger = wiring_DependencyContainer.getLogger();
	wiring_ApplicationBootstrap._logger.info("ApplicationBootstrap: Starting initialization...");
	var clock = wiring_DependencyContainer.getClock();
	var httpClient = wiring_DependencyContainer.getHttpClient();
	wiring_ApplicationBootstrap._logger.info("ApplicationBootstrap: Dependencies initialized successfully");
	wiring_ApplicationBootstrap._logger.info("ApplicationBootstrap: Clock timestamp: " + clock.nowMs());
	wiring_ApplicationBootstrap._isInitialized = true;
	wiring_ApplicationBootstrap._logger.info("ApplicationBootstrap: Application ready");
};
var wiring_DependencyContainer = function() { };
wiring_DependencyContainer.getHttpClient = function() {
	if(wiring_DependencyContainer._httpClient == null) {
		wiring_DependencyContainer._httpClient = new platform_core_js_HttpClientJs();
	}
	return wiring_DependencyContainer._httpClient;
};
wiring_DependencyContainer.getLogger = function() {
	if(wiring_DependencyContainer._logger == null) {
		wiring_DependencyContainer._logger = new platform_core_js_LoggerJs();
	}
	return wiring_DependencyContainer._logger;
};
wiring_DependencyContainer.getClock = function() {
	if(wiring_DependencyContainer._clock == null) {
		wiring_DependencyContainer._clock = new platform_core_js_PlatformClockJs();
	}
	return wiring_DependencyContainer._clock;
};
if(typeof(performance) != "undefined" ? typeof(performance.now) == "function" : false) {
	HxOverrides.now = performance.now.bind(performance);
}
wiring_ApplicationBootstrap._isInitialized = false;
frontend_WebAppMain.main();
})(typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
