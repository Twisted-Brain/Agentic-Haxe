// Generated by Haxe 4.3.7
(function ($global) { "use strict";
Math.__name__ = true;
var Std = function() { };
Std.__name__ = true;
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
var haxe_iterators_ArrayIterator = function(array) {
	this.current = 0;
	this.array = array;
};
haxe_iterators_ArrayIterator.__name__ = true;
haxe_iterators_ArrayIterator.prototype = {
	hasNext: function() {
		return this.current < this.array.length;
	}
	,next: function() {
		return this.array[this.current++];
	}
};
var js_Boot = function() { };
js_Boot.__name__ = true;
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(((o) instanceof Array)) {
			var str = "[";
			s += "\t";
			var _g = 0;
			var _g1 = o.length;
			while(_g < _g1) {
				var i = _g++;
				str += (i > 0 ? "," : "") + js_Boot.__string_rec(o[i],s);
			}
			str += "]";
			return str;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( _g ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var str = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		var k = null;
		for( k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str.length != 2) {
			str += ", \n";
		}
		str += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str += "\n" + s + "}";
		return str;
	case "string":
		return o;
	default:
		return String(o);
	}
};
var js_node_Http = require("http");
var js_node_buffer_Buffer = require("buffer").Buffer;
var platform_core_js_NodeServer = function() { };
platform_core_js_NodeServer.__name__ = true;
platform_core_js_NodeServer.main = function() {
	js_node_Http.createServer(function(req,res) {
		res.setHeader("Access-Control-Allow-Origin","*");
		res.setHeader("Access-Control-Allow-Methods","POST, GET, OPTIONS");
		res.setHeader("Access-Control-Allow-Headers","Content-Type");
		if(req.method == "OPTIONS") {
			res.statusCode = 204;
			res.end();
			return;
		}
		if(req.method == "POST" && req.url == "/api/chat") {
			var body = "";
			req.on("data",function(chunk) {
				body += chunk;
			});
			req.on("end",function() {
				var postData = body;
				var options = { hostname : "localhost", port : 9090, path : "/llm/request", method : "POST", headers : { "Content-Type" : "application/json", "Content-Length" : Std.string(js_node_buffer_Buffer.byteLength(postData))}};
				var gatewayReq = js_node_Http.request(options,function(gatewayRes) {
					var gatewayBody = "";
					gatewayRes.on("data",function(chunk) {
						gatewayBody += chunk;
					});
					gatewayRes.on("end",function() {
						res.setHeader("Content-Type","application/json");
						res.end(gatewayBody);
					});
				});
				gatewayReq.on("error",function(e) {
					console.log("platform/core/js/NodeServer.hx:55:","Problem with request: " + e.message);
					res.statusCode = 500;
					res.end("{\"error\": \"Gateway communication failed\"}");
				});
				gatewayReq.write(postData);
				gatewayReq.end();
			});
		} else {
			res.statusCode = 404;
			res.end("Not Found");
		}
	}).listen(8081,function() {
		console.log("platform/core/js/NodeServer.hx:67:","Node.js server running on http://localhost:8081");
	});
};
String.__name__ = true;
Array.__name__ = true;
js_Boot.__toStr = ({ }).toString;
platform_core_js_NodeServer.main();
})({});
