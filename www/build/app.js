// Generated by Haxe 4.3.7
(function ($global) { "use strict";
var $estr = function() { return js_Boot.__string_rec(this,''); },$hxEnums = $hxEnums || {},$_;
function $extend(from, fields) {
	var proto = Object.create(from);
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var HxOverrides = function() { };
HxOverrides.__name__ = true;
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	return s.substr(pos,len);
};
HxOverrides.now = function() {
	return Date.now();
};
Math.__name__ = true;
var Std = function() { };
Std.__name__ = true;
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
var StringTools = function() { };
StringTools.__name__ = true;
StringTools.isSpace = function(s,pos) {
	var c = HxOverrides.cca(s,pos);
	if(!(c > 8 && c < 14)) {
		return c == 32;
	} else {
		return true;
	}
};
StringTools.ltrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,r)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,r,l - r);
	} else {
		return s;
	}
};
StringTools.rtrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,l - r - 1)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,0,l - r);
	} else {
		return s;
	}
};
StringTools.trim = function(s) {
	return StringTools.ltrim(StringTools.rtrim(s));
};
var domain_types_core_Sender = $hxEnums["domain.types.core.Sender"] = { __ename__:true,__constructs__:null
	,User: {_hx_name:"User",_hx_index:0,__enum__:"domain.types.core.Sender",toString:$estr}
	,Bot: {_hx_name:"Bot",_hx_index:1,__enum__:"domain.types.core.Sender",toString:$estr}
};
domain_types_core_Sender.__constructs__ = [domain_types_core_Sender.User,domain_types_core_Sender.Bot];
var haxe_iterators_ArrayIterator = function(array) {
	this.current = 0;
	this.array = array;
};
haxe_iterators_ArrayIterator.__name__ = true;
haxe_iterators_ArrayIterator.prototype = {
	hasNext: function() {
		return this.current < this.array.length;
	}
	,next: function() {
		return this.array[this.current++];
	}
};
var js_Boot = function() { };
js_Boot.__name__ = true;
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o.__enum__) {
			var e = $hxEnums[o.__enum__];
			var con = e.__constructs__[o._hx_index];
			var n = con._hx_name;
			if(con.__params__) {
				s = s + "\t";
				return n + "(" + ((function($this) {
					var $r;
					var _g = [];
					{
						var _g1 = 0;
						var _g2 = con.__params__;
						while(true) {
							if(!(_g1 < _g2.length)) {
								break;
							}
							var p = _g2[_g1];
							_g1 = _g1 + 1;
							_g.push(js_Boot.__string_rec(o[p],s));
						}
					}
					$r = _g;
					return $r;
				}(this))).join(",") + ")";
			} else {
				return n;
			}
		}
		if(((o) instanceof Array)) {
			var str = "[";
			s += "\t";
			var _g = 0;
			var _g1 = o.length;
			while(_g < _g1) {
				var i = _g++;
				str += (i > 0 ? "," : "") + js_Boot.__string_rec(o[i],s);
			}
			str += "]";
			return str;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( _g ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var str = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		var k = null;
		for( k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str.length != 2) {
			str += ", \n";
		}
		str += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str += "\n" + s + "}";
		return str;
	case "string":
		return o;
	default:
		return String(o);
	}
};
var platform_frontend_js_Main = function() { };
platform_frontend_js_Main.__name__ = true;
platform_frontend_js_Main.main = function() {
	ReactDOM.render(React.createElement(platform_frontend_js_components_ChatView,{ }),window.document.getElementById("app"));
};
var platform_frontend_js_components_ChatViewState = function() {
	this.messages = [];
	this.isLoading = false;
};
platform_frontend_js_components_ChatViewState.__name__ = true;
var React_Component = require("react").Component;
var platform_frontend_js_components_ChatView = function(props) {
	React_Component.call(this,props);
	this.state = new platform_frontend_js_components_ChatViewState();
};
platform_frontend_js_components_ChatView.__name__ = true;
platform_frontend_js_components_ChatView.__super__ = React_Component;
platform_frontend_js_components_ChatView.prototype = $extend(React_Component.prototype,{
	sendMessage: function(content) {
		var _gthis = this;
		if(StringTools.trim(content) == "") {
			return;
		}
		var newState = new platform_frontend_js_components_ChatViewState();
		newState.messages = this.state.messages.slice();
		newState.isLoading = true;
		this.setState(newState);
		var userMessage = { sender : domain_types_core_Sender.User, content : content};
		newState = new platform_frontend_js_components_ChatViewState();
		newState.messages = this.state.messages.concat([userMessage]);
		newState.isLoading = true;
		this.setState(newState);
		var xhr = new XMLHttpRequest();
		xhr.open("POST","http://localhost:8081/api/chat");
		xhr.setRequestHeader("Content-Type","application/json");
		xhr.onload = function() {
			if(xhr.status == 200) {
				var response = JSON.parse(xhr.responseText);
				var botMessage = { sender : domain_types_core_Sender.Bot, content : response.content};
				var finalState = new platform_frontend_js_components_ChatViewState();
				finalState.messages = _gthis.state.messages.concat([botMessage]);
				finalState.isLoading = false;
				_gthis.setState(finalState);
			} else {
				var errorState = new platform_frontend_js_components_ChatViewState();
				errorState.messages = _gthis.state.messages.slice();
				errorState.isLoading = false;
				_gthis.setState(errorState);
			}
		};
		xhr.onerror = function() {
			var errorState = new platform_frontend_js_components_ChatViewState();
			errorState.messages = _gthis.state.messages.slice();
			errorState.isLoading = false;
			_gthis.setState(errorState);
		};
		xhr.send(JSON.stringify({ message : content}));
	}
	,render: function() {
		return { $$typeof : $$tre, type : "div", props : { className : "chat-view", children : [{ $$typeof : $$tre, type : "div", props : { className : "chat-header", children : [{ $$typeof : $$tre, type : "img", props : { src : "/assets/logo.png", className : "chat-logo", alt : "Logo"}, key : null, ref : null},{ $$typeof : $$tre, type : "h1", props : { children : "Haxe AI Chat"}, key : null, ref : null}]}, key : null, ref : null},{ $$typeof : $$tre, type : "div", props : { className : "chat-container", children : { $$typeof : $$tre, type : platform_frontend_js_components_MessageList, props : { messages : this.state.messages}, key : null, ref : null}}, key : null, ref : null},"state.isLoading ? jsx('",{ $$typeof : $$tre, type : "div", props : { className : "loading-indicator", children : [{ $$typeof : $$tre, type : "div", props : { className : "spinner"}, key : null, ref : null},{ $$typeof : $$tre, type : "span", props : { children : "AI t√¶nker..."}, key : null, ref : null}]}, key : null, ref : null},"') : null}",{ $$typeof : $$tre, type : platform_frontend_js_components_MessageInput, props : { onSendMessage : $bind(this,this.sendMessage)}, key : null, ref : null}]}, key : null, ref : null};
	}
});
var platform_frontend_js_components_MessageInputProps = function() { };
platform_frontend_js_components_MessageInputProps.__name__ = true;
var platform_frontend_js_components_MessageInput = function(props) {
	React_Component.call(this,props);
	this.state = { currentInput : ""};
};
platform_frontend_js_components_MessageInput.__name__ = true;
platform_frontend_js_components_MessageInput.__super__ = React_Component;
platform_frontend_js_components_MessageInput.prototype = $extend(React_Component.prototype,{
	render: function() {
		var _gthis = this;
		return { $$typeof : $$tre, type : "div", props : { className : "message-input", children : [{ $$typeof : $$tre, type : "input", props : { value : this.state.currentInput, type : "text", placeholder : "Type your message...", onKeyDown : function(e) {
			if(e.key == "Enter") {
				_gthis.props.onSendMessage(_gthis.state.currentInput);
				_gthis.setState({ currentInput : ""});
			}
		}, onChange : function(e) {
			_gthis.setState({ currentInput : e.target.value});
		}}, key : null, ref : null},{ $$typeof : $$tre, type : "button", props : { onClick : function(_) {
			_gthis.props.onSendMessage(_gthis.state.currentInput);
			_gthis.setState({ currentInput : ""});
		}, children : "Send"}, key : null, ref : null}]}, key : null, ref : null};
	}
});
var platform_frontend_js_components_MessageListProps = function() { };
platform_frontend_js_components_MessageListProps.__name__ = true;
var platform_frontend_js_components_MessageList = function(props) {
	React_Component.call(this,props);
};
platform_frontend_js_components_MessageList.__name__ = true;
platform_frontend_js_components_MessageList.__super__ = React_Component;
platform_frontend_js_components_MessageList.prototype = $extend(React_Component.prototype,{
	renderMessage: function(message) {
		return { $$typeof : $$tre, type : "div", props : { className : "message " + Std.string(message.sender), children : message.content}, key : null, ref : null};
	}
	,render: function() {
		var messageElements;
		if(this.props.messages != null) {
			var _g = [];
			var _g1 = 0;
			var _g2 = this.props.messages;
			while(_g1 < _g2.length) {
				var message = _g2[_g1];
				++_g1;
				_g.push(this.renderMessage(message));
			}
			messageElements = _g;
		} else {
			messageElements = [];
		}
		return { $$typeof : $$tre, type : "div", props : { className : "message-list", children : messageElements}, key : null, ref : null};
	}
});
var React = require("react");
var ReactDOM = require("react-dom");
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $global.$haxeUID++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = m.bind(o); o.hx__closures__[m.__id__] = f; } return f; }
$global.$haxeUID |= 0;
if(typeof(performance) != "undefined" ? typeof(performance.now) == "function" : false) {
	HxOverrides.now = performance.now.bind(performance);
}
String.__name__ = true;
Array.__name__ = true;
js_Boot.__toStr = ({ }).toString;
var $$tre = (typeof Symbol === "function" && Symbol.for && Symbol.for("react.element")) || 0xeac7;
platform_frontend_js_components_ChatView.displayName = "ChatView";
platform_frontend_js_components_MessageInput.displayName = "MessageInput";
platform_frontend_js_components_MessageList.displayName = "MessageList";
platform_frontend_js_Main.main();
})(typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
