# Multi-stage Dockerfile for Haxe Python ML Service
# Stage 1: Build Haxe to Python
FROM haxe:4.3-alpine AS haxe-builder

# Install build dependencies
RUN apk add --no-cache git

# Set working directory
WORKDIR /app

# Copy source code
COPY . .

# Build Haxe to Python
RUN haxe build-python.hxml

# Stage 2: Python ML Runtime
FROM python:3.9-slim AS python-runtime

# Set environment variables
ENV PYTHONUNBUFFERED=1
ENV PYTHONPATH=/app
ENV ML_SERVICE_PORT=8080
ENV ML_SERVICE_HOST=0.0.0.0

# Install system dependencies for ML libraries
RUN apt-get update && apt-get install -y \
    build-essential \
    libhdf5-dev \
    libopenblas-dev \
    liblapack-dev \
    gfortran \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Copy requirements and install Python dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Copy compiled Python code from builder stage
COPY --from=haxe-builder /app/bin/python/ ./

# Create models directory
RUN mkdir -p models logs

# Create non-root user for security
RUN useradd --create-home --shell /bin/bash mluser && \
    chown -R mluser:mluser /app
USER mluser

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD python -c "import requests; requests.get('http://localhost:8080/health')"

# Expose port
EXPOSE 8080

# Start the ML service
CMD ["python", "ml_service.py"]